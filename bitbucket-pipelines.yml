
pipelines:
  default:
    - step: 
        name: Build Front end
        image: node:10.15.0
        script:
          - npm install
          # - npm test -- --coverage --coverageDirectory=output/coverage/jest  
          # - tar -czvf coverage.tar.gz output/coverage/jest
          - npm run autoprefix:r
          - npm run build
          - mkdir packaged
          - tar -czvf packaged/package-${BITBUCKET_BUILD_NUMBER}.tar.gz -C build . 
        artifacts:
          - packaged/**
          # - coverage.tar.gz

  branches:
    '{master}':
    - step: 
        name: Build Front end
        image: node:10.15.0
        script:
          - npm install
          # - npm test -- --coverage --coverageDirectory=output/coverage/jest  
          # - tar -czvf coverage.tar.gz output/coverage/jest
          - npm run build
          - mkdir packaged
          - tar -czvf packaged/package-${BITBUCKET_BUILD_NUMBER}.tar.gz -C build .
        artifacts:
          - packaged/**
          # - coverage.tar.gz

    - step:
          name: Deploy to Heroku
          image: node:10.15.0
          deployment: staging
          script:
            - mkdir heroku
            - tar --exclude='./build' --exclude='./heroku' --exclude='./packaged' -czvf heroku/application-${BITBUCKET_BUILD_NUMBER}.tar.gz ./
            - pipe: atlassian/heroku-deploy:1.1.2
              variables:
                HEROKU_API_KEY: $HEROKU_API_KEY
                HEROKU_APP_NAME: $HEROKU_APP_NAME
                ZIP_FILE: "./heroku/application-${BITBUCKET_BUILD_NUMBER}.tar.gz"
